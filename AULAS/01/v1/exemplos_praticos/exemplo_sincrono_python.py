#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Exemplo Pr√°tico: Requisi√ß√£o S√≠ncrona em Python

Este exemplo demonstra como fazer requisi√ß√µes HTTP s√≠ncronas usando a biblioteca requests.
Em requisi√ß√µes s√≠ncronas, o programa espera (bloqueia) at√© receber a resposta do servidor
antes de continuar a execu√ß√£o.

Autor: Material Did√°tico - Arquitetura da Web
"""

import requests
import time
from datetime import datetime


def exemplo_requisicao_sincrona():
    """
    Demonstra uma requisi√ß√£o HTTP s√≠ncrona simples.
    O programa bloqueia at√© receber a resposta.
    """
    print("=" * 60)
    print("EXEMPLO 1: Requisi√ß√£o S√≠ncrona Simples")
    print("=" * 60)
    
    print(f"[{datetime.now().strftime('%H:%M:%S')}] Iniciando requisi√ß√£o s√≠ncrona...")
    
    try:
        # Esta linha BLOQUEIA a execu√ß√£o at√© receber resposta
        print(f"[{datetime.now().strftime('%H:%M:%S')}] Fazendo requisi√ß√£o para JSONPlaceholder...")
        resposta = requests.get('https://jsonplaceholder.typicode.com/posts/1')
        
        print(f"[{datetime.now().strftime('%H:%M:%S')}] Resposta recebida!")
        
        if resposta.status_code == 200:
            dados = resposta.json()
            print(f"‚úÖ Sucesso! Status: {resposta.status_code}")
            print(f"üìÑ T√≠tulo: {dados['title']}")
            print(f"üìù Conte√∫do: {dados['body'][:100]}...")
            print(f"üë§ User ID: {dados['userId']}")
        else:
            print(f"‚ùå Erro! Status: {resposta.status_code}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erro na requisi√ß√£o: {e}")
    
    print(f"[{datetime.now().strftime('%H:%M:%S')}] Requisi√ß√£o conclu√≠da.\n")


def exemplo_multiplas_requisicoes_sincronas():
    """
    Demonstra o problema de fazer m√∫ltiplas requisi√ß√µes s√≠ncronas.
    Cada requisi√ß√£o espera a anterior terminar antes de come√ßar.
    """
    print("=" * 60)
    print("EXEMPLO 2: M√∫ltiplas Requisi√ß√µes S√≠ncronas (Sequenciais)")
    print("=" * 60)
    
    urls = [
        'https://jsonplaceholder.typicode.com/posts/1',
        'https://jsonplaceholder.typicode.com/posts/2',
        'https://jsonplaceholder.typicode.com/posts/3'
    ]
    
    inicio = time.time()
    resultados = []
    
    print(f"[{datetime.now().strftime('%H:%M:%S')}] Iniciando {len(urls)} requisi√ß√µes s√≠ncronas...")
    
    for i, url in enumerate(urls, 1):
        print(f"[{datetime.now().strftime('%H:%M:%S')}] Requisi√ß√£o {i}...")
        
        try:
            # Cada requisi√ß√£o bloqueia at√© terminar
            resposta = requests.get(url)
            
            if resposta.status_code == 200:
                dados = resposta.json()
                resultados.append({
                    'id': dados['id'],
                    'titulo': dados['title'][:50] + '...'
                })
                print(f"  ‚úÖ Requisi√ß√£o {i} conclu√≠da")
            else:
                print(f"  ‚ùå Requisi√ß√£o {i} falhou: {resposta.status_code}")
                
        except requests.exceptions.RequestException as e:
            print(f"  ‚ùå Erro na requisi√ß√£o {i}: {e}")
    
    fim = time.time()
    tempo_total = fim - inicio
    
    print(f"\nüìä Resultados:")
    for resultado in resultados:
        print(f"  ‚Ä¢ Post {resultado['id']}: {resultado['titulo']}")
    
    print(f"\n‚è±Ô∏è  Tempo total: {tempo_total:.2f} segundos")
    print(f"üìù Observa√ß√£o: As requisi√ß√µes foram executadas sequencialmente (uma ap√≥s a outra)")
    print()


def exemplo_com_timeout():
    """
    Demonstra como usar timeout em requisi√ß√µes s√≠ncronas.
    """
    print("=" * 60)
    print("EXEMPLO 3: Requisi√ß√£o S√≠ncrona com Timeout")
    print("=" * 60)
    
    print(f"[{datetime.now().strftime('%H:%M:%S')}] Fazendo requisi√ß√£o com timeout de 5 segundos...")
    
    try:
        # Timeout de 5 segundos - se demorar mais, levanta exce√ß√£o
        resposta = requests.get(
            'https://jsonplaceholder.typicode.com/posts/1',
            timeout=5  # timeout em segundos
        )
        
        print(f"[{datetime.now().strftime('%H:%M:%S')}] Resposta recebida dentro do timeout!")
        print(f"‚úÖ Status: {resposta.status_code}")
        print(f"‚è±Ô∏è  Tempo de resposta: {resposta.elapsed.total_seconds():.2f} segundos")
        
    except requests.exceptions.Timeout:
        print("‚ùå Timeout! A requisi√ß√£o demorou mais de 5 segundos.")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erro na requisi√ß√£o: {e}")
    
    print()


def exemplo_com_headers_personalizados():
    """
    Demonstra como enviar headers personalizados em requisi√ß√µes s√≠ncronas.
    """
    print("=" * 60)
    print("EXEMPLO 4: Requisi√ß√£o S√≠ncrona com Headers Personalizados")
    print("=" * 60)
    
    headers = {
        'User-Agent': 'Exemplo-Python-Sincrono/1.0',
        'Accept': 'application/json',
        'Content-Type': 'application/json'
    }
    
    print(f"[{datetime.now().strftime('%H:%M:%S')}] Enviando requisi√ß√£o com headers personalizados...")
    print("üìã Headers enviados:")
    for chave, valor in headers.items():
        print(f"  ‚Ä¢ {chave}: {valor}")
    
    try:
        resposta = requests.get(
            'https://jsonplaceholder.typicode.com/posts/1',
            headers=headers
        )
        
        print(f"\n[{datetime.now().strftime('%H:%M:%S')}] Resposta recebida!")
        print(f"‚úÖ Status: {resposta.status_code}")
        
        # Mostra alguns headers da resposta
        print("üìã Alguns headers da resposta:")
        headers_interessantes = ['content-type', 'server', 'date']
        for header in headers_interessantes:
            if header in resposta.headers:
                print(f"  ‚Ä¢ {header}: {resposta.headers[header]}")
        
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erro na requisi√ß√£o: {e}")
    
    print()


def demonstrar_bloqueio():
    """
    Demonstra como as requisi√ß√µes s√≠ncronas bloqueiam a execu√ß√£o.
    """
    print("=" * 60)
    print("EXEMPLO 5: Demonstra√ß√£o do Bloqueio")
    print("=" * 60)
    
    print("üîÑ Este exemplo mostra como o programa fica 'parado' durante requisi√ß√µes s√≠ncronas.")
    print("   Observe que n√£o h√° nenhuma sa√≠da entre o in√≠cio e o fim de cada requisi√ß√£o.\n")
    
    for i in range(3):
        print(f"[{datetime.now().strftime('%H:%M:%S')}] Iniciando requisi√ß√£o {i+1}...")
        
        # Durante esta linha, o programa fica completamente bloqueado
        resposta = requests.get('https://jsonplaceholder.typicode.com/posts/1')
        
        print(f"[{datetime.now().strftime('%H:%M:%S')}] Requisi√ß√£o {i+1} conclu√≠da (Status: {resposta.status_code})")
        print("  ‚è∏Ô∏è  O programa ficou bloqueado durante toda a requisi√ß√£o!")
        print()
    
    print("üìù Observa√ß√£o: Em aplica√ß√µes reais, isso significa que:")
    print("   ‚Ä¢ A interface do usu√°rio ficaria 'travada'")
    print("   ‚Ä¢ Outras opera√ß√µes n√£o poderiam ser executadas")
    print("   ‚Ä¢ A experi√™ncia do usu√°rio seria prejudicada")
    print()


def main():
    """
    Fun√ß√£o principal que executa todos os exemplos.
    """
    print("üåê EXEMPLOS DE REQUISI√á√ïES S√çNCRONAS EM PYTHON")
    print("=" * 60)
    print("Este script demonstra como funcionam as requisi√ß√µes HTTP s√≠ncronas")
    print("usando a biblioteca 'requests' do Python.")
    print("=" * 60)
    print()
    
    # Executa todos os exemplos
    exemplo_requisicao_sincrona()
    exemplo_multiplas_requisicoes_sincronas()
    exemplo_com_timeout()
    exemplo_com_headers_personalizados()
    demonstrar_bloqueio()
    
    print("=" * 60)
    print("üéì RESUMO DOS CONCEITOS APRENDIDOS:")
    print("=" * 60)
    print("‚úÖ Requisi√ß√µes s√≠ncronas bloqueiam a execu√ß√£o do programa")
    print("‚úÖ S√£o mais simples de implementar e entender")
    print("‚úÖ Adequadas para scripts simples e opera√ß√µes sequenciais")
    print("‚ùå Podem tornar aplica√ß√µes lentas e n√£o responsivas")
    print("‚ùå N√£o aproveitam bem recursos computacionais")
    print("‚ùå Inadequadas para interfaces de usu√°rio")
    print()
    print("üí° PR√ìXIMO PASSO: Aprenda sobre requisi√ß√µes ass√≠ncronas!")
    print("   ‚Ä¢ Use asyncio + aiohttp para requisi√ß√µes n√£o-bloqueantes")
    print("   ‚Ä¢ Melhore a performance com opera√ß√µes paralelas")
    print("   ‚Ä¢ Crie aplica√ß√µes mais responsivas")
    print("=" * 60)


if __name__ == "__main__":
    main()

